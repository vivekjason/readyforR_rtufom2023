---
title: "Introduction to R- Tutorial"
author: "Vivek Jason"
format: 
  html:
    theme: simplex
    toc: true
    toc_float: true
editor: visual
---

### R Basics

#### Exercise 1: Basic Arithmetic

1.  Assign the value 7 to a variable named 'a'

2.  Divide 'a' by 3 and store it in a variable named 'b'.

3.  Print the value of 'b'.

```{r, eval=FALSE}
a <- 7
b <- a / 3
print(b) # Output will be 2.333333
```

#### Exercise 2: Working with Vectors

1.  Create a vector 'v' with the numbers 2, 4, 6.

2.  Subtract 1 from each element and print the result.

```{r, eval=FALSE}
v <- c(2, 4, 6)
result <- v - 1
print(result) # Output will be 1 3 5
```

### Data Structures

#### Exercise 1: Creating a Data Frame

1.  Create a data frame named 'employees' with columns 'name', 'salary', and 'department'

2.  Print the summary of the data frame.

```{r, eval=FALSE}
employees <- data.frame(name = c("Alice", "Bob"), salary = c(50000, 60000), department = c("HR", "Finance"))
summary(employees)
```

#### Exercise 2: Accessing Elements in a Matrix

1.  Create a matrix 'mat' with the numbers 1 to 12 and 3 rows

2.  Print the element in the first row and second column.

```{r, eval=FALSE}
mat <- matrix(c(1:12), nrow = 3)
print(mat[1, 2]) # Output will be 4
```

### Basic Data Manipulation

#### Exercise 1: Subsetting Data

1.  Create a data frame 'products' with columns 'ProductID', 'Price'

2.  Print the filtered data.

```{r, eval=FALSE}
products <- data.frame(ProductID = c(1, 2, 3), Price = c(15, 25, 30))
print(products)
```

#### Exercise 2: Setting and Getting Working Directory

1.  Determine your current working directory.

2.  Set a new working directory to a folder of your choice (e.g., "C:/my_folder").

3.  Verify that the working directory has been changed by getting the current working directory again.

```{r, eval=FALSE}
# Get the current working directory
getwd()

# Set a new working directory
setwd("C:/my_folder")

# Verify the working directory has been changed
getwd() # Output will be "C:/my_folder"
```

#### 

Exercise 3: **Calling in Data Using readxl**

1.  Install and load the **`readxl`** package

2.  Download the `quarantine.xlsx` file from here and place it in you working directory

3.  Use the **`read_excel`** function to read an Excel file (e.g., "`quarantine.xlsx`") from your working directory.

```{r, eval=FALSE}
# Install the readxl package (if not already installed)
install.packages("readxl")

# Load the readxl package
library(readxl)

# Read the Excel file
data <- read_excel("quarantine.xlsx")

```

#### Exercise 4: Using Basic Functions

1.  Print the first 6 rows of the sample data

2.  Print the summary of the 'lattitude' column.

```{r, eval=FALSE}
data(data)
head(data)
summary(data$lattitude)
```
